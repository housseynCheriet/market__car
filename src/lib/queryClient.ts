import { QueryClient } from "/node_modules/.vite/deps/@tanstack_react-query.js?v=1ac3b587";
async function throwIfResNotOk(res) {
  if (!res.ok) {
    const text = await res.text() || res.statusText;
    throw new Error(`${res.status}: ${text}`);
  }
}
export async function apiRequest(method, url, data) {
  const res = await fetch(url, {
    method,
    headers: data ? { "Content-Type": "application/json" } : {},
    body: data ? JSON.stringify(data) : void 0,
    credentials: "include"
  });
  await throwIfResNotOk(res);
  return res;
}
export const getQueryFn = ({ on401: unauthorizedBehavior }) => async ({ queryKey }) => {
  const res = await fetch(queryKey.join("/"), {
    credentials: "include"
  });
  if (unauthorizedBehavior === "returnNull" && res.status === 401) {
    return null;
  }
  await throwIfResNotOk(res);
  return await res.json();
};
export const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      queryFn: getQueryFn({ on401: "throw" }),
      refetchInterval: false,
      refetchOnWindowFocus: false,
      staleTime: Infinity,
      retry: false
    },
    mutations: {
      retry: false
    }
  }
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXJ5Q2xpZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXJ5Q2xpZW50LCBRdWVyeUZ1bmN0aW9uIH0gZnJvbSBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiO1xuXG5hc3luYyBmdW5jdGlvbiB0aHJvd0lmUmVzTm90T2socmVzOiBSZXNwb25zZSkge1xuICAgIGlmICghcmVzLm9rKSB7XG4gICAgICAgIGNvbnN0IHRleHQgPSAoYXdhaXQgcmVzLnRleHQoKSkgfHwgcmVzLnN0YXR1c1RleHQ7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtyZXMuc3RhdHVzfTogJHt0ZXh0fWApO1xuICAgIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwaVJlcXVlc3QoXG4gICAgbWV0aG9kOiBzdHJpbmcsXG4gICAgdXJsOiBzdHJpbmcsXG4gICAgZGF0YT86IHVua25vd24gfCB1bmRlZmluZWQsXG4pOiBQcm9taXNlPFJlc3BvbnNlPiB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgICAgIG1ldGhvZCxcbiAgICAgICAgaGVhZGVyczogZGF0YSA/IHsgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSA6IHt9LFxuICAgICAgICBib2R5OiBkYXRhID8gSlNPTi5zdHJpbmdpZnkoZGF0YSkgOiB1bmRlZmluZWQsXG4gICAgICAgIGNyZWRlbnRpYWxzOiBcImluY2x1ZGVcIixcbiAgICB9KTtcblxuICAgIGF3YWl0IHRocm93SWZSZXNOb3RPayhyZXMpO1xuICAgIHJldHVybiByZXM7XG59XG5cbnR5cGUgVW5hdXRob3JpemVkQmVoYXZpb3IgPSBcInJldHVybk51bGxcIiB8IFwidGhyb3dcIjtcbmV4cG9ydCBjb25zdCBnZXRRdWVyeUZuOiA8VD4ob3B0aW9uczoge1xuICAgIG9uNDAxOiBVbmF1dGhvcml6ZWRCZWhhdmlvcjtcbn0pID0+IFF1ZXJ5RnVuY3Rpb248VD4gPVxuICAgICh7IG9uNDAxOiB1bmF1dGhvcml6ZWRCZWhhdmlvciB9KSA9PlxuICAgICAgICBhc3luYyAoeyBxdWVyeUtleSB9KSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChxdWVyeUtleS5qb2luKFwiL1wiKSBhcyBzdHJpbmcsIHtcbiAgICAgICAgICAgICAgICBjcmVkZW50aWFsczogXCJpbmNsdWRlXCIsXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKHVuYXV0aG9yaXplZEJlaGF2aW9yID09PSBcInJldHVybk51bGxcIiAmJiByZXMuc3RhdHVzID09PSA0MDEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYXdhaXQgdGhyb3dJZlJlc05vdE9rKHJlcyk7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgcmVzLmpzb24oKTtcbiAgICAgICAgfTtcblxuZXhwb3J0IGNvbnN0IHF1ZXJ5Q2xpZW50ID0gbmV3IFF1ZXJ5Q2xpZW50KHtcbiAgICBkZWZhdWx0T3B0aW9uczoge1xuICAgICAgICBxdWVyaWVzOiB7XG4gICAgICAgICAgICBxdWVyeUZuOiBnZXRRdWVyeUZuKHsgb240MDE6IFwidGhyb3dcIiB9KSxcbiAgICAgICAgICAgIHJlZmV0Y2hJbnRlcnZhbDogZmFsc2UsXG4gICAgICAgICAgICByZWZldGNoT25XaW5kb3dGb2N1czogZmFsc2UsXG4gICAgICAgICAgICBzdGFsZVRpbWU6IEluZmluaXR5LFxuICAgICAgICAgICAgcmV0cnk6IGZhbHNlLFxuICAgICAgICB9LFxuICAgICAgICBtdXRhdGlvbnM6IHtcbiAgICAgICAgICAgIHJldHJ5OiBmYWxzZSxcbiAgICAgICAgfSxcbiAgICB9LFxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsbUJBQWtDO0FBRTNDLGVBQWUsZ0JBQWdCLEtBQWU7QUFDMUMsTUFBSSxDQUFDLElBQUksSUFBSTtBQUNULFVBQU0sT0FBUSxNQUFNLElBQUksS0FBSyxLQUFNLElBQUk7QUFDdkMsVUFBTSxJQUFJLE1BQU0sR0FBRyxJQUFJLE1BQU0sS0FBSyxJQUFJLEVBQUU7QUFBQSxFQUM1QztBQUNKO0FBRUEsc0JBQXNCLFdBQ2xCLFFBQ0EsS0FDQSxNQUNpQjtBQUNqQixRQUFNLE1BQU0sTUFBTSxNQUFNLEtBQUs7QUFBQSxJQUN6QjtBQUFBLElBQ0EsU0FBUyxPQUFPLEVBQUUsZ0JBQWdCLG1CQUFtQixJQUFJLENBQUM7QUFBQSxJQUMxRCxNQUFNLE9BQU8sS0FBSyxVQUFVLElBQUksSUFBSTtBQUFBLElBQ3BDLGFBQWE7QUFBQSxFQUNqQixDQUFDO0FBRUQsUUFBTSxnQkFBZ0IsR0FBRztBQUN6QixTQUFPO0FBQ1g7QUFHTyxhQUFNLGFBR1QsQ0FBQyxFQUFFLE9BQU8scUJBQXFCLE1BQzNCLE9BQU8sRUFBRSxTQUFTLE1BQU07QUFDcEIsUUFBTSxNQUFNLE1BQU0sTUFBTSxTQUFTLEtBQUssR0FBRyxHQUFhO0FBQUEsSUFDbEQsYUFBYTtBQUFBLEVBQ2pCLENBQUM7QUFFRCxNQUFJLHlCQUF5QixnQkFBZ0IsSUFBSSxXQUFXLEtBQUs7QUFDN0QsV0FBTztBQUFBLEVBQ1g7QUFFQSxRQUFNLGdCQUFnQixHQUFHO0FBQ3pCLFNBQU8sTUFBTSxJQUFJLEtBQUs7QUFDMUI7QUFFRCxhQUFNLGNBQWMsSUFBSSxZQUFZO0FBQUEsRUFDdkMsZ0JBQWdCO0FBQUEsSUFDWixTQUFTO0FBQUEsTUFDTCxTQUFTLFdBQVcsRUFBRSxPQUFPLFFBQVEsQ0FBQztBQUFBLE1BQ3RDLGlCQUFpQjtBQUFBLE1BQ2pCLHNCQUFzQjtBQUFBLE1BQ3RCLFdBQVc7QUFBQSxNQUNYLE9BQU87QUFBQSxJQUNYO0FBQUEsSUFDQSxXQUFXO0FBQUEsTUFDUCxPQUFPO0FBQUEsSUFDWDtBQUFBLEVBQ0o7QUFDSixDQUFDOyIsIm5hbWVzIjpbXX0=